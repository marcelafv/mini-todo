{"ast":null,"code":"var _jsxFileName = \"/home/marcela/Documents/mini-todo/src/list.jsx\";\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Item from \"./item\";\n\nfunction List({\n  filteredItems,\n  completeItem\n}) {\n  // const filteredItems = todo.Items.filter(item => \n  //     (filter.includeComplete || !item.complete) &&\n  //     (!filter.overdueOnly || isOverdue(item)),\n  // );\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, filteredItems.map(item => /*#__PURE__*/React.createElement(Item, {\n    key: item.id,\n    item: item,\n    completeItem: () => completeItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  })));\n}\n\nList.PropTypes = {\n  items: PropTypes.array.isRequired,\n  completeItem: PropTypes.func.isRequired\n};\nexport default List;","map":{"version":3,"sources":["/home/marcela/Documents/mini-todo/src/list.jsx"],"names":["React","PropTypes","Item","List","filteredItems","completeItem","map","item","id","items","array","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAqB,YAArB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AAEA,SAASC,IAAT,CAAc;AAACC,EAAAA,aAAD;AAAgBC,EAAAA;AAAhB,CAAd,EAA6C;AACzC;AACA;AACA;AACA;AAEA,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,aAAa,CAACE,GAAd,CAAkBC,IAAI,iBACnB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,IAA1B;AAAgC,IAAA,YAAY,EAAE,MAAMF,YAAY,CAACE,IAAI,CAACC,EAAN,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAMH;;AAEDL,IAAI,CAACF,SAAL,GAAiB;AACbQ,EAAAA,KAAK,EAAER,SAAS,CAACS,KAAV,CAAgBC,UADV;AAEbN,EAAAA,YAAY,EAAEJ,SAAS,CAACW,IAAV,CAAeD;AAFhB,CAAjB;AAKA,eAAeR,IAAf","sourcesContent":["import React from \"react\";\nimport PropTypes from\"prop-types\";\nimport Item from \"./item\";\n\nfunction List({filteredItems, completeItem}) {\n    // const filteredItems = todo.Items.filter(item => \n    //     (filter.includeComplete || !item.complete) &&\n    //     (!filter.overdueOnly || isOverdue(item)),\n    // );\n    \n    return (\n        <ul className=\"list-group\">\n            {filteredItems.map(item => (\n                <Item key={item.id} item={item} completeItem={() => completeItem(item.id)} />))}\n        </ul>\n    );\n}\n\nList.PropTypes = {\n    items: PropTypes.array.isRequired,\n    completeItem: PropTypes.func.isRequired,\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}