{"ast":null,"code":"var _jsxFileName = \"/home/marcela/Documents/mini-todo/src/App.js\";\nimport React from 'react';\nimport dateformat from 'dateformat';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport todo from \"./mockData.json\";\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar navbar-light bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 17\n    }\n  }, \"Minimalist Todo List\")));\n}\n\nfunction List() {\n  const [items, setItems] = React.useState(todo.Items);\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(Item, {\n    key: item.id,\n    item: item,\n    completeItem: () => completeItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction Item({\n  item,\n  completeItem\n}) {\n  const itemClass = `list-group-item list-group-item-${isOverdue(item)}`;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: itemClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `item-title${item.complete ? \" complete-item\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }\n  }, `${item.name} - ${dateformat(new Date(item.timestampDeadline), \"dd-mm-yyyy\")}`), !item.complete && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link\",\n    onClick: completeItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 21\n    }\n  }, \"Complete item\")));\n}\n\nfunction isOverdue(item) {\n  return !item.complete && item.timestampDeadline < new Date().getTime();\n}\n\nfunction completeItem(id) {\n  const updateItems = items.map(item => item.id === id ? { ...item,\n    complete: true\n  } : item);\n  setItems(updatedItems);\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/marcela/Documents/mini-todo/src/App.js"],"names":["React","dateformat","todo","Header","List","items","setItems","useState","Items","map","item","id","completeItem","Item","itemClass","isOverdue","complete","name","Date","timestampDeadline","getTime","updateItems","updatedItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;;AAEA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,SAASC,MAAT,GAAkB;AACd,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,CADJ;AAQH;;AAED,SAASC,IAAT,GAAgB;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,KAAK,CAACO,QAAN,CAAeL,IAAI,CAACM,KAApB,CAA1B;AACA,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,KAAK,CAACI,GAAN,CAAUC,IAAI,iBACX,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC,EAAhB;AAAoB,IAAA,IAAI,EAAED,IAA1B;AAAgC,IAAA,YAAY,EAAE,MAAME,YAAY,CAACF,IAAI,CAACC,EAAN,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAMH;;AAED,SAASE,IAAT,CAAc;AAAEH,EAAAA,IAAF;AAAQE,EAAAA;AAAR,CAAd,EAAuC;AACnC,QAAME,SAAS,GAAI,mCAAkCC,SAAS,CAACL,IAAD,CAAO,EAArE;AACA,sBACI;AAAI,IAAA,SAAS,EAAEI,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAG,aAAYJ,IAAI,CAACM,QAAL,GAAgB,gBAAhB,GAAmC,EAAG,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,GAAEN,IAAI,CAACO,IAAK,MAAKhB,UAAU,CAAC,IAAIiB,IAAJ,CAASR,IAAI,CAACS,iBAAd,CAAD,EAAmC,YAAnC,CAAiD,EADlF,CADJ,EAIK,CAACT,IAAI,CAACM,QAAN,iBACG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,OAAO,EAAEJ,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALR,CADJ,CADJ;AAYH;;AAED,SAASG,SAAT,CAAmBL,IAAnB,EAAyB;AACrB,SAAO,CAACA,IAAI,CAACM,QAAN,IAAkBN,IAAI,CAACS,iBAAL,GAAyB,IAAID,IAAJ,GAAWE,OAAX,EAAlD;AACH;;AAED,SAASR,YAAT,CAAsBD,EAAtB,EAA0B;AACtB,QAAMU,WAAW,GAAGhB,KAAK,CAACI,GAAN,CAAUC,IAAI,IAAKA,IAAI,CAACC,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGD,IAAL;AAAWM,IAAAA,QAAQ,EAAE;AAArB,GAAjB,GAA+CN,IAAlE,CAApB;AACAJ,EAAAA,QAAQ,CAACgB,YAAD,CAAR;AACH;;AAED,eAAenB,MAAf","sourcesContent":["import React from 'react';\nimport dateformat from 'dateformat';\nimport logo from './logo.svg';\nimport './App.css';\nimport todo from \"./mockData.json\"\n\nfunction Header() {\n    return (\n        <header>\n            <nav className=\"navbar navbar-light bg-light\">\n                <span className=\"navbar-brand\">\n                    Minimalist Todo List\n                </span>\n            </nav>\n        </header>);\n}\n\nfunction List() {\n    const [items, setItems] = React.useState(todo.Items)\n    return (\n        <ul className=\"list-group\">\n            {items.map(item => (\n                <Item key={item.id} item={item} completeItem={() => completeItem(item.id)} />))}\n        </ul>\n    );\n}\n\nfunction Item({ item, completeItem  }) {\n    const itemClass = `list-group-item list-group-item-${isOverdue(item)}`\n    return (\n        <li className={itemClass}>\n            <div className=\"item\">\n                <span className={`item-title${item.complete ? \" complete-item\" : \"\"}`}>\n                    {`${item.name} - ${dateformat(new Date(item.timestampDeadline), \"dd-mm-yyyy\")}`}\n                </span>\n                {!item.complete && (\n                    <button type=\"button\" className=\"btn btn-link\" onClick={completeItem}>\n                        Complete item\n                    </button>)}\n            </div>\n        </li>);\n}\n\nfunction isOverdue(item) {\n    return !item.complete && item.timestampDeadline < new Date().getTime();\n}\n\nfunction completeItem(id) {\n    const updateItems = items.map(item => (item.id === id ? { ...item, complete: true } : item ));\n    setItems(updatedItems)\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}