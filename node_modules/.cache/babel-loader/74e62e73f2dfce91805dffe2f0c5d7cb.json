{"ast":null,"code":"var _jsxFileName = \"/home/marcela/Documents/mini-todo/src/App.js\";\nimport React from 'react';\nimport dateformat from 'dateformat';\nimport './App.css';\nimport todo from \"./mockData.json\";\nimport Checkbox from './checkbox';\nconst [items, setItems] = React.useState(todo.Items);\nconst [filter, setFilter] = React.useState({\n  overdueOnly: false,\n  includeComplete: false\n});\nconst filteredItems = items.filter(item => (filter.includeComplete || !item.complete) && (!filter.overdueOnly || isOverdue(item)));\n\nfunction Header() {\n  return /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    className: \"navbar navbar-light bg-light\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"navbar-brand\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, \"Minimalist Todo List\")), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Overdue items only\",\n    selected: filter.overdueOnly,\n    select: () => setFilter({ ...filter,\n      overdueOnly: true\n    }),\n    unSelect: () => setFilter({ ...filter,\n      overdueOnly: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    label: \"Include complete items\",\n    selected: filter.includeComplete,\n    select: () => setFilter({ ...filter,\n      includeComplete: true\n    }),\n    unSelect: () => setFilter({ ...filter,\n      includeComplete: false\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    items: filteredItems,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  })));\n}\n\nfunction isOverdue(item) {\n  return !item.complete && item.timestampDeadline < new Date().getTime();\n}\n\nfunction completeItem(id, setItems) {\n  const updatedItems = items.map(item => item.id === id ? { ...item,\n    complete: true\n  } : item);\n  setItems(updatedItems);\n}\n\nfunction List({\n  filter,\n  completeItem\n}) {\n  const filteredItems = items.filter(item => (filter.includeComplete || !item.complete) && (!filter.overdueOnly || isOverdue(item)));\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"list-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, filteredItems.map(item => /*#__PURE__*/React.createElement(Item, {\n    key: item.id,\n    item: item,\n    completeItem: () => completeItem(item.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  })));\n}\n\nfunction Item({\n  item,\n  completeItem\n}) {\n  const itemClass = `list-group-item list-group-item-${isOverdue(item)}`;\n  return /*#__PURE__*/React.createElement(\"li\", {\n    className: itemClass,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"item\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: `item-title${item.complete ? \" complete-item\" : \"\"}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, `${item.name} - ${dateformat(new Date(item.timestampDeadline), \"dd-mm-yyyy\")}`), !item.complete && /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-link\",\n    onClick: completeItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Complete item\")));\n}\n\nexport default Header;","map":{"version":3,"sources":["/home/marcela/Documents/mini-todo/src/App.js"],"names":["React","dateformat","todo","Checkbox","items","setItems","useState","Items","filter","setFilter","overdueOnly","includeComplete","filteredItems","item","complete","isOverdue","Header","timestampDeadline","Date","getTime","completeItem","id","updatedItems","map","List","Item","itemClass","name"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,iBAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;AAEA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,KAAK,CAACM,QAAN,CAAeJ,IAAI,CAACK,KAApB,CAA1B;AACA,MAAM,CAACC,MAAD,EAASC,SAAT,IACFT,KAAK,CAACM,QAAN,CAAe;AAAEI,EAAAA,WAAW,EAAE,KAAf;AAAsBC,EAAAA,eAAe,EAAE;AAAvC,CAAf,CADJ;AAEA,MAAMC,aAAa,GAAGR,KAAK,CAACI,MAAN,CAClBK,IAAI,IAAI,CAACL,MAAM,CAACG,eAAP,IAA0B,CAACE,IAAI,CAACC,QAAjC,MAA+C,CAACN,MAAM,CAACE,WAAR,IAAuBK,SAAS,CAACF,IAAD,CAA/E,CADU,CAAtB;;AAIA,SAASG,MAAT,GAAkB;AACd,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,CADJ,eAMA,oBAAC,QAAD;AACI,IAAA,KAAK,EAAC,oBADV;AAC+B,IAAA,QAAQ,EAAER,MAAM,CAACE,WADhD;AAEI,IAAA,MAAM,EAAE,MAAMD,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYE,MAAAA,WAAW,EAAE;AAAzB,KAAD,CAF3B;AAGI,IAAA,QAAQ,EAAE,MAAMD,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYE,MAAAA,WAAW,EAAE;AAAzB,KAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANA,eAWA,oBAAC,QAAD;AACI,IAAA,KAAK,EAAC,wBADV;AACmC,IAAA,QAAQ,EAAEF,MAAM,CAACG,eADpD;AAEI,IAAA,MAAM,EAAE,MAAMF,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYG,MAAAA,eAAe,EAAE;AAA7B,KAAD,CAF3B;AAGI,IAAA,QAAQ,EAAE,MAAMF,SAAS,CAAC,EAAC,GAAGD,MAAJ;AAAYG,MAAAA,eAAe,EAAE;AAA7B,KAAD,CAH7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXA,eAgBA;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CAhBA,CADJ;AAuBH;;AAED,SAASG,SAAT,CAAmBF,IAAnB,EAAyB;AACrB,SAAO,CAACA,IAAI,CAACC,QAAN,IAAkBD,IAAI,CAACI,iBAAL,GAAyB,IAAIC,IAAJ,GAAWC,OAAX,EAAlD;AACH;;AAED,SAASC,YAAT,CAAsBC,EAAtB,EAA0BhB,QAA1B,EAAoC;AAChC,QAAMiB,YAAY,GAAGlB,KAAK,CAACmB,GAAN,CAAUV,IAAI,IAAKA,IAAI,CAACQ,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGR,IAAL;AAAWC,IAAAA,QAAQ,EAAE;AAArB,GAAjB,GAA+CD,IAAlE,CAArB;AACAR,EAAAA,QAAQ,CAACiB,YAAD,CAAR;AACH;;AAED,SAASE,IAAT,CAAc;AAAChB,EAAAA,MAAD;AAASY,EAAAA;AAAT,CAAd,EAAsC;AAClC,QAAMR,aAAa,GAAGR,KAAK,CAACI,MAAN,CAAaK,IAAI,IACnC,CAACL,MAAM,CAACG,eAAP,IAA0B,CAACE,IAAI,CAACC,QAAjC,MACC,CAACN,MAAM,CAACE,WAAR,IAAuBK,SAAS,CAACF,IAAD,CADjC,CADkB,CAAtB;AAKA,sBACI;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,aAAa,CAACW,GAAd,CAAkBV,IAAI,iBACnB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACQ,EAAhB;AAAoB,IAAA,IAAI,EAAER,IAA1B;AAAgC,IAAA,YAAY,EAAE,MAAMO,YAAY,CAACP,IAAI,CAACQ,EAAN,CAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADH,CADL,CADJ;AAMH;;AAGD,SAASI,IAAT,CAAc;AAAEZ,EAAAA,IAAF;AAAQO,EAAAA;AAAR,CAAd,EAAuC;AACnC,QAAMM,SAAS,GAAI,mCAAkCX,SAAS,CAACF,IAAD,CAAO,EAArE;AACA,sBACI;AAAI,IAAA,SAAS,EAAEa,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,SAAS,EAAG,aAAYb,IAAI,CAACC,QAAL,GAAgB,gBAAhB,GAAmC,EAAG,EAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACM,GAAED,IAAI,CAACc,IAAK,MAAK1B,UAAU,CAAC,IAAIiB,IAAJ,CAASL,IAAI,CAACI,iBAAd,CAAD,EAAmC,YAAnC,CAAiD,EADlF,CADJ,EAIK,CAACJ,IAAI,CAACC,QAAN,iBACG;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,cAAhC;AAA+C,IAAA,OAAO,EAAEM,YAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALR,CADJ,CADJ;AAYH;;AAED,eAAeJ,MAAf","sourcesContent":["import React from 'react';\nimport dateformat from 'dateformat';\nimport './App.css';\nimport todo from \"./mockData.json\"\nimport Checkbox from './checkbox'\n\nconst [items, setItems] = React.useState(todo.Items)\nconst [filter, setFilter] = \n    React.useState({ overdueOnly: false, includeComplete: false });\nconst filteredItems = items.filter(\n    item => (filter.includeComplete || !item.complete) && (!filter.overdueOnly || isOverdue(item)),\n);\n\nfunction Header() {\n    return (\n        <header>\n            <nav className=\"navbar navbar-light bg-light\">\n                <span className=\"navbar-brand\">\n                    Minimalist Todo List\n                </span>\n            </nav>\n        <Checkbox\n            label=\"Overdue items only\" selected={filter.overdueOnly}\n            select={() => setFilter({...filter, overdueOnly: true})}\n            unSelect={() => setFilter({...filter, overdueOnly: false})}\n        />\n        <Checkbox\n            label=\"Include complete items\" selected={filter.includeComplete}\n            select={() => setFilter({...filter, includeComplete: true})}\n            unSelect={() => setFilter({...filter, includeComplete: false})}\n        />\n        <div className=\"list\">\n            <List items={filteredItems} />\n        </div>\n        </header>\n    );\n        \n}\n\nfunction isOverdue(item) {\n    return !item.complete && item.timestampDeadline < new Date().getTime();\n}\n\nfunction completeItem(id, setItems) {\n    const updatedItems = items.map(item => (item.id === id ? { ...item, complete: true } : item ));\n    setItems(updatedItems)\n}\n\nfunction List({filter, completeItem}) {\n    const filteredItems = items.filter(item => \n        (filter.includeComplete || !item.complete) &&\n        (!filter.overdueOnly || isOverdue(item)),\n    );\n    \n    return (\n        <ul className=\"list-group\">\n            {filteredItems.map(item => (\n                <Item key={item.id} item={item} completeItem={() => completeItem(item.id)} />))}\n        </ul>\n    );\n}\n\n\nfunction Item({ item, completeItem  }) {\n    const itemClass = `list-group-item list-group-item-${isOverdue(item)}`\n    return (\n        <li className={itemClass}>\n            <div className=\"item\">\n                <span className={`item-title${item.complete ? \" complete-item\" : \"\"}`}>\n                    {`${item.name} - ${dateformat(new Date(item.timestampDeadline), \"dd-mm-yyyy\")}`}\n                </span>\n                {!item.complete && (\n                    <button type=\"button\" className=\"btn btn-link\" onClick={completeItem}>\n                        Complete item\n                    </button>)}\n            </div>\n        </li>);\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}